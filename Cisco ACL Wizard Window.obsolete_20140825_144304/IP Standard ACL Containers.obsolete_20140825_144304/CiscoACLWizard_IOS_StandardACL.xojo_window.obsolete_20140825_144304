#tag Window
Begin ContainerControl CiscoACLWizard_IOS_StandardACL
   AcceptFocus     =   False
   AcceptTabs      =   True
   AutoDeactivate  =   True
   BackColor       =   &cFFFFFF00
   Backdrop        =   0
   Compatibility   =   ""
   Enabled         =   True
   EraseBackground =   False
   HasBackColor    =   False
   Height          =   338
   HelpTag         =   ""
   InitialParent   =   ""
   Left            =   0
   LockBottom      =   False
   LockLeft        =   False
   LockRight       =   False
   LockTop         =   False
   TabIndex        =   0
   TabPanelIndex   =   0
   TabStop         =   True
   Top             =   0
   Transparent     =   True
   UseFocusRing    =   False
   Visible         =   True
   Width           =   409
   Begin PushButton NextButton
      AutoDeactivate  =   True
      Bold            =   False
      ButtonStyle     =   "0"
      Cancel          =   False
      Caption         =   "Create"
      Default         =   False
      Enabled         =   False
      Height          =   22
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Italic          =   False
      Left            =   238
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Scope           =   0
      TabIndex        =   6
      TabPanelIndex   =   0
      TabStop         =   True
      TextFont        =   "System"
      TextSize        =   12.0
      TextUnit        =   0
      Top             =   308
      Underline       =   False
      Visible         =   True
      Width           =   81
   End
   Begin PushButton CancelButton
      AutoDeactivate  =   True
      Bold            =   False
      ButtonStyle     =   "0"
      Cancel          =   False
      Caption         =   "Cancel"
      Default         =   False
      Enabled         =   True
      Height          =   22
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Italic          =   False
      Left            =   331
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Scope           =   0
      TabIndex        =   8
      TabPanelIndex   =   0
      TabStop         =   True
      TextFont        =   "System"
      TextSize        =   12.0
      TextUnit        =   0
      Top             =   308
      Underline       =   False
      Visible         =   True
      Width           =   65
   End
   Begin PushButton BackButton
      AutoDeactivate  =   True
      Bold            =   False
      ButtonStyle     =   "0"
      Cancel          =   False
      Caption         =   "Back"
      Default         =   False
      Enabled         =   True
      Height          =   22
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Italic          =   False
      Left            =   171
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Scope           =   0
      TabIndex        =   7
      TabPanelIndex   =   0
      TabStop         =   True
      TextFont        =   "System"
      TextSize        =   12.0
      TextUnit        =   0
      Top             =   308
      Underline       =   False
      Visible         =   True
      Width           =   65
   End
   Begin Label validatetitleLabel
      AutoDeactivate  =   True
      Bold            =   False
      DataField       =   ""
      DataSource      =   ""
      Enabled         =   True
      Height          =   20
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Italic          =   True
      Left            =   10
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Multiline       =   False
      Scope           =   0
      Selectable      =   False
      TabIndex        =   21
      TabPanelIndex   =   0
      TabStop         =   True
      Text            =   "IP Standard Access List Settings"
      TextAlign       =   0
      TextColor       =   &c00000000
      TextFont        =   "Helvetica"
      TextSize        =   16.0
      TextUnit        =   0
      Top             =   12
      Transparent     =   False
      Underline       =   False
      Visible         =   True
      Width           =   374
   End
   Begin RoundRectangle RectangeGroupbox
      AutoDeactivate  =   True
      BorderColor     =   &cA8A8A800
      BorderWidth     =   1
      Enabled         =   True
      FillColor       =   &cE2E2E200
      Height          =   233
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Left            =   9
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      OvalHeight      =   16
      OvalWidth       =   10
      Scope           =   0
      TabIndex        =   22
      TabPanelIndex   =   0
      TabStop         =   True
      Top             =   44
      Visible         =   True
      Width           =   389
      Begin PopupMenu CIscoIOS_Standard_ACL_Number
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   "Access-list entry number"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   0
         TabPanelIndex   =   0
         TabStop         =   False
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   54
         Underline       =   False
         Visible         =   True
         Width           =   93
      End
      Begin Label AccessListNumber_Label
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   1
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Access List Number:"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   54
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   117
      End
      Begin ComboBox SourceWildcardMaskComboBox
         AutoComplete    =   True
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   False
         Height          =   20
         HelpTag         =   "Automatic inverse wildcard mask calculation is performed off of the Source IP Subnets' ""Class Full"" boundary. If you need a classless inverse mask then you must calculate it manually. \n\nCalculation Tip: 255.255.255.255 - 255.255.254.0 = 0.0.1.255"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   5
         TabPanelIndex   =   0
         TabStop         =   True
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   191
         Underline       =   False
         UseFocusRing    =   True
         Visible         =   False
         Width           =   133
      End
      Begin Label SourceWildcardMaskLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   3
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Inverse Wildcard Mask:"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   191
         Transparent     =   True
         Underline       =   False
         Visible         =   False
         Width           =   158
      End
      Begin PopupMenu LogACLHit_Popupmenu
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   "If set to Yes than all matched entries for this ACL entry will be recorded in the log"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   2
         TabPanelIndex   =   0
         TabStop         =   False
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   110
         Underline       =   False
         Visible         =   True
         Width           =   93
      End
      Begin ComboBox SourceHostIPComboBox
         AutoComplete    =   True
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   False
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   4
         TabPanelIndex   =   0
         TabStop         =   True
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   165
         Underline       =   False
         UseFocusRing    =   True
         Visible         =   False
         Width           =   133
      End
      Begin Label LogACLHitLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   6
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Log ACL Matches?"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   110
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   199
      End
      Begin Label EnterSourceIPHostLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   7
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Enter Source Host or IP:"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   165
         Transparent     =   True
         Underline       =   False
         Visible         =   False
         Width           =   135
      End
      Begin PopupMenu SourceTypePopUpMenu
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   "This is the source type for this access-list entry. The following are valid source types:\n\nAny -  Matches ""Any"" source IP address\nHost - Matches a specific host with a wildcard mask of 0.0.0.0\nSubnet - Matches a specific subnet using the wildcard mask you provide"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   3
         TabPanelIndex   =   0
         TabStop         =   False
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   138
         Underline       =   False
         Visible         =   True
         Width           =   133
      End
      Begin Label SourceHostAddress_Label
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   9
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Select Source Type:"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   137
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   153
      End
      Begin PopupMenu DenyPermitPopupMenu
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   "Permit or Deny traffic matched by this access-list entry"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         InitialValue    =   ""
         Italic          =   False
         Left            =   194
         ListIndex       =   0
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   1
         TabPanelIndex   =   0
         TabStop         =   False
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   82
         Underline       =   False
         Visible         =   True
         Width           =   93
      End
      Begin Label DenyPermitLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   20
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   29
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   11
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "Select ACL Decision Action:"
         TextAlign       =   0
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   12.0
         TextUnit        =   0
         Top             =   82
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   153
      End
      Begin BevelButton ACL_Config_New_Button
         AcceptFocus     =   False
         AutoDeactivate  =   True
         BackColor       =   &c00000000
         Bevel           =   4
         Bold            =   True
         ButtonType      =   0
         Caption         =   "+"
         CaptionAlign    =   3
         CaptionDelta    =   0
         CaptionPlacement=   1
         Enabled         =   True
         HasBackColor    =   False
         HasMenu         =   0
         Height          =   22
         HelpTag         =   "Add additional access-list entry"
         Icon            =   0
         IconAlign       =   0
         IconDX          =   0
         IconDY          =   0
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   324
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         MenuValue       =   0
         Scope           =   0
         TabIndex        =   17
         TabPanelIndex   =   0
         TabStop         =   False
         TextColor       =   &c3F3F3F00
         TextFont        =   "System"
         TextSize        =   14.0
         TextUnit        =   0
         Top             =   247
         Underline       =   False
         Value           =   False
         Visible         =   True
         Width           =   23
      End
      Begin Label DisplayFirst_DataLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   19
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   79
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   18
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "0"
         TextAlign       =   2
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   10.0
         TextUnit        =   0
         Top             =   250
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   15
      End
      Begin Separator Separator1
         AutoDeactivate  =   True
         Enabled         =   True
         Height          =   2
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Left            =   9
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   19
         TabPanelIndex   =   0
         TabStop         =   True
         Top             =   238
         Visible         =   True
         Width           =   379
      End
      Begin Label Display_OF_Label
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   19
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   97
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   20
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "of"
         TextAlign       =   1
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   10.0
         TextUnit        =   0
         Top             =   250
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   15
      End
      Begin Label DisplayUbound_DataLabel
         AutoDeactivate  =   True
         Bold            =   False
         DataField       =   ""
         DataSource      =   ""
         Enabled         =   True
         Height          =   19
         HelpTag         =   ""
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   116
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Multiline       =   False
         Scope           =   0
         Selectable      =   False
         TabIndex        =   21
         TabPanelIndex   =   0
         TabStop         =   True
         Text            =   "0"
         TextAlign       =   1
         TextColor       =   &c00000000
         TextFont        =   "Helvetica"
         TextSize        =   10.0
         TextUnit        =   0
         Top             =   250
         Transparent     =   True
         Underline       =   False
         Visible         =   True
         Width           =   15
      End
      Begin BevelButton ACL_Config_Del_Button
         AcceptFocus     =   False
         AutoDeactivate  =   True
         BackColor       =   &c00000000
         Bevel           =   4
         Bold            =   True
         ButtonType      =   0
         Caption         =   "-"
         CaptionAlign    =   3
         CaptionDelta    =   0
         CaptionPlacement=   1
         Enabled         =   False
         HasBackColor    =   False
         HasMenu         =   0
         Height          =   22
         HelpTag         =   "Remove access-list entry"
         Icon            =   0
         IconAlign       =   0
         IconDX          =   0
         IconDY          =   0
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   346
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         MenuValue       =   0
         Scope           =   0
         TabIndex        =   22
         TabPanelIndex   =   0
         TabStop         =   False
         TextColor       =   &c3F3F3F00
         TextFont        =   "System"
         TextSize        =   14.0
         TextUnit        =   0
         Top             =   247
         Underline       =   False
         Value           =   False
         Visible         =   True
         Width           =   23
      End
      Begin Canvas AutoSaved_Canvas
         AcceptFocus     =   False
         AcceptTabs      =   False
         AutoDeactivate  =   True
         Backdrop        =   0
         DoubleBuffer    =   True
         Enabled         =   True
         EraseBackground =   False
         Height          =   18
         HelpTag         =   "Current ACL entry has been Auto-Saved"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Left            =   313
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   23
         TabPanelIndex   =   0
         TabStop         =   True
         Top             =   217
         Transparent     =   True
         UseFocusRing    =   False
         Visible         =   False
         Width           =   63
      End
      Begin PushButton ACL_Config_Next_Button
         AutoDeactivate  =   True
         Bold            =   False
         ButtonStyle     =   "0"
         Cancel          =   False
         Caption         =   "Next >"
         Default         =   False
         Enabled         =   False
         Height          =   19
         HelpTag         =   "Next access-list entry"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   138
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   24
         TabPanelIndex   =   0
         TabStop         =   True
         TextFont        =   "Helvetica"
         TextSize        =   11.0
         TextUnit        =   0
         Top             =   250
         Underline       =   False
         Visible         =   True
         Width           =   46
      End
      Begin PushButton ACL_Config_Prev_Button
         AutoDeactivate  =   True
         Bold            =   False
         ButtonStyle     =   "0"
         Cancel          =   False
         Caption         =   "< Prev"
         Default         =   False
         Enabled         =   False
         Height          =   19
         HelpTag         =   "Previous access-list entry"
         Index           =   -2147483648
         InitialParent   =   "RectangeGroupbox"
         Italic          =   False
         Left            =   25
         LockBottom      =   False
         LockedInPosition=   False
         LockLeft        =   True
         LockRight       =   False
         LockTop         =   True
         Scope           =   0
         TabIndex        =   25
         TabPanelIndex   =   0
         TabStop         =   True
         TextFont        =   "Helvetica"
         TextSize        =   11.0
         TextUnit        =   0
         Top             =   250
         Underline       =   False
         Visible         =   True
         Width           =   46
      End
   End
   Begin Label PageCounterLabel
      AutoDeactivate  =   True
      Bold            =   False
      DataField       =   ""
      DataSource      =   ""
      Enabled         =   True
      Height          =   20
      HelpTag         =   ""
      Index           =   -2147483648
      InitialParent   =   ""
      Italic          =   False
      Left            =   10
      LockBottom      =   False
      LockedInPosition=   False
      LockLeft        =   True
      LockRight       =   False
      LockTop         =   True
      Multiline       =   False
      Scope           =   0
      Selectable      =   False
      TabIndex        =   23
      TabPanelIndex   =   0
      TabStop         =   True
      Text            =   "2 of 3"
      TextAlign       =   0
      TextColor       =   &c00000000
      TextFont        =   "Helvetica"
      TextSize        =   11.0
      TextUnit        =   0
      Top             =   308
      Transparent     =   True
      Underline       =   False
      Visible         =   True
      Width           =   60
   End
End
#tag EndWindow

#tag WindowCode
	#tag Event
		Sub MouseMove(X As Integer, Y As Integer)
		  ToolTip.Hide
		  
		  mContinueButtonShowOrHide
		End Sub
	#tag EndEvent

	#tag Event
		Sub Open()
		  //// Create First Index
		  mPrepareFirstEntry
		  // Update Current Display Stats on ACL Setting Screen
		  mSet_ACLSettings_Current_DisplayCounter
		  // Update UpperBounds Display Stats on ACL Setting Screen
		  mSet_ACLSettings_Current_DisplayUpperBoundsCounter
		  
		  
		  
		End Sub
	#tag EndEvent


	#tag Method, Flags = &h21
		Private Function fConvert_32BitDecimalTo8Bit_IP(Inbound_32BitWordDecimal as UInt32) As String
		  // Convert 32 bit decimal base10 back to IP Address 8 bit Decimal
		  Dim Calc1, Octet1, Octet2, Octet3, Octet4, Base10IP As UInt32
		  Dim DecimalAddressParts(), DecimalAddress As String
		  Base10IP = Inbound_32BitWordDecimal
		  
		  For i As Integer = 0 To 3
		    Calc1 = Base10IP / 256^(3-i)
		    Base10IP = Base10IP - Calc1*(256^(3-i))
		    if i = 0 Then
		      Octet1 = Calc1
		    Elseif i = 1 Then
		      Octet2 = Calc1
		    Elseif i = 2 Then
		      Octet3 = Calc1
		    Elseif i = 3 Then
		      Octet4 = Calc1
		    End if
		  Next i
		  
		  DecimalAddressParts=Array(Str(Octet1),Str(Octet2),Str(Octet3), Str(Octet4))
		  DecimalAddress =Join(DecimalAddressParts,".")
		  
		  Return DecimalAddress
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function fConvert_8BitDecimalTo32BitDecimal(Octet1 as UInt32, Octet2 as UInt32, Octet3 as Uint32, Octet4 as UInt32) As UInt32
		  // Convert IP Address 8 bit Decimal to 32 bit decimal base10
		  dim Base10IP,a,b,c,d as UInt32
		  
		  a = Octet1 * 16777216
		  b = Octet2 * 65536
		  c =  Octet3 * 256
		  d =  Octet4
		  
		  Base10IP = a+b+c+d
		  
		  Return Base10IP
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function fGetClassOnly(Input_StartIP_32BitDecimalWord as UInt32) As UINt32
		  // Get the ClassFull Network Based on the Network ID Passed In - Not Comparing it to the Subnet Mask
		  Dim IANA_Class as String
		  Dim IANA_Class_Dec as uInt32
		  
		  if Input_StartIP_32BitDecimalWord >= 16777216 AND Input_StartIP_32BitDecimalWord <= 2130706431 Then
		    // Class A 1 - 126
		    // Compare our Network Against 255.0.0.0
		    IANA_Class = "Class A"
		    IANA_Class_Dec= fConvert_8BitDecimalTo32BitDecimal(255,0,0,0)
		    
		  Else
		    // Class B 128 - 191
		    if Input_StartIP_32BitDecimalWord >= 2147483648 AND Input_StartIP_32BitDecimalWord <= 3221225471 Then
		      // Matched B
		      IANA_Class = "Class B"
		      IANA_Class_Dec= fConvert_8BitDecimalTo32BitDecimal(255,255,0,0)
		    else
		      // Class C 192-223
		      If Input_StartIP_32BitDecimalWord >= 3221225472 AND Input_StartIP_32BitDecimalWord <= 3758096383 Then
		        // Matched C
		        IANA_Class = "Class C"
		        IANA_Class_Dec= fConvert_8BitDecimalTo32BitDecimal(255,255,255,0)
		      Else
		        // D (Multicast) 224 - 239
		        If Input_StartIP_32BitDecimalWord >= 3758096384 AND Input_StartIP_32BitDecimalWord <= 4026531839 Then
		          // Matched D (Multicast)
		          IANA_Class = "Class D Multicast"
		        End If
		        
		        
		      End if
		      
		    end if
		    
		  end if
		  
		  Return IANA_Class_Dec
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function fInverseSubnetMaskValidation(inputMask as string) As String
		  // Decimal Based Subnet Validation
		  Dim Validate_InverseMask_RegEx as RegEx
		  Dim Validate_InverseMask_RegExMatch as RegExMatch
		  Dim Validate_InverseMask_HitText as String
		  
		  Validate_InverseMask_RegEx = New RegEx
		  Validate_InverseMask_RegEx.Options.CaseSensitive = False
		  Validate_InverseMask_RegEx.Options.Greedy = True
		  Validate_InverseMask_RegEx.Options.MatchEmpty = True
		  Validate_InverseMask_RegEx.Options.DotMatchAll = True
		  Validate_InverseMask_RegEx.Options.StringBeginIsLineBegin = True
		  Validate_InverseMask_RegEx.Options.StringEndIsLineEnd = True
		  Validate_InverseMask_RegEx.Options.TreatTargetAsOneLine = False
		  Validate_InverseMask_RegEx.SearchPattern = "\b(0.255.255.255|0.127.255.255|0.63.255.255|0.31.255.255|0.15.255.255|0.7.255.255|0.3.255.255|0.1.255.255|0.0.255.255|0.0.127.255|0.0.63.255|0.0.31.255|0.0.15.255|0.0.7.255|0.0.3.255|0.0.1.255|0.0.0.255|0.0.0.127|0.0.0.63|0.0.0.31|0.0.0.15|0.0.0.7|0.0.0.3|0.0.0.1|0.0.0.0)\b"
		  // RegEx Process Subnet Mask Validation
		  Validate_InverseMask_RegExMatch = Validate_InverseMask_RegEx.Search(inputMask)
		  if Validate_InverseMask_RegExMatch <> nil then
		    Validate_InverseMask_HitText = Validate_InverseMask_RegExMatch.SubExpressionString(0)
		    
		    Return Validate_InverseMask_HitText
		  elseif Validate_InverseMask_RegExMatch = nil then
		    Return "Not_Valid"
		  end if
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Function fIPv4_Validation(inputIPv4address as string) As String
		  // Did we get a hostname or IPV4 address
		  Dim IP_or_Hostname_RegEx as RegEx
		  Dim IP_or_Hostname_RegExMatch as RegExMatch
		  Dim IP_or_Hostname_HitText as String
		  IP_or_Hostname_RegEx = New RegEx
		  IP_or_Hostname_RegEx.Options.CaseSensitive = False
		  IP_or_Hostname_RegEx.Options.Greedy = True
		  IP_or_Hostname_RegEx.Options.MatchEmpty = True
		  IP_or_Hostname_RegEx.Options.DotMatchAll = True
		  IP_or_Hostname_RegEx.Options.StringBeginIsLineBegin = True
		  IP_or_Hostname_RegEx.Options.StringEndIsLineEnd = True
		  IP_or_Hostname_RegEx.Options.TreatTargetAsOneLine = False
		  IP_or_Hostname_RegEx.SearchPattern = "(^[a-z]|A-Z]).+"
		  
		  // Do We Have a Hostname or IPv4 Address?
		  IP_or_Hostname_RegExMatch = IP_or_Hostname_RegEx.Search(inputIPv4address)
		  if IP_or_Hostname_RegExMatch <> nil then
		    // We have Matched a Hostname - Just Return without IPv4 Validation
		    IP_or_Hostname_HitText = IP_or_Hostname_RegExMatch.SubExpressionString(0)
		    Return "Valid"
		  end if
		  
		  // Continue on as we have Numbers to Process
		  
		  // Break Down 4 Octets
		  Dim Octet_1 as String = inputIPv4address.NthField(".",1)
		  Dim Octet_2 as String = inputIPv4address.NthField(".",2)
		  Dim Octet_3 as String = inputIPv4address.NthField(".",3)
		  Dim Octet_4 as String = inputIPv4address.NthField(".",4)
		  
		  Dim Validate_Octet_1_RegEx as RegEx
		  Dim Validate_Octet_1_RegExMatch as RegExMatch
		  Dim Validate_Octet_1_HitText as String
		  Dim Validate_Octet_2_RegEx as RegEx
		  Dim Validate_Octet_2_RegExMatch as RegExMatch
		  Dim Validate_Octet_2_HitText as String
		  Dim Validate_Octet_3_RegEx as RegEx
		  Dim Validate_Octet_3_RegExMatch as RegExMatch
		  Dim Validate_Octet_3_HitText as String
		  Dim Validate_Octet_4_RegEx as RegEx
		  Dim Validate_Octet_4_RegExMatch as RegExMatch
		  Dim Validate_Octet_4_HitText as String
		  
		  // First Octet RegEx Parameters
		  Validate_Octet_1_RegEx = New RegEx
		  Validate_Octet_1_RegEx.Options.CaseSensitive = False
		  Validate_Octet_1_RegEx.Options.Greedy = True
		  Validate_Octet_1_RegEx.Options.MatchEmpty = True
		  Validate_Octet_1_RegEx.Options.DotMatchAll = True
		  Validate_Octet_1_RegEx.Options.StringBeginIsLineBegin = True
		  Validate_Octet_1_RegEx.Options.StringEndIsLineEnd = True
		  Validate_Octet_1_RegEx.Options.TreatTargetAsOneLine = False
		  Validate_Octet_1_RegEx.SearchPattern =  "\b([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-1][0-9]|22[0-3])\b"
		  
		  // Second Octet RegEx Parameters (allow 0-255)
		  Validate_Octet_2_RegEx = New RegEx
		  Validate_Octet_2_RegEx.Options.CaseSensitive = False
		  Validate_Octet_2_RegEx.Options.Greedy = True
		  Validate_Octet_2_RegEx.Options.MatchEmpty = True
		  Validate_Octet_2_RegEx.Options.DotMatchAll = True
		  Validate_Octet_2_RegEx.Options.StringBeginIsLineBegin = True
		  Validate_Octet_2_RegEx.Options.StringEndIsLineEnd = True
		  Validate_Octet_2_RegEx.Options.TreatTargetAsOneLine = False
		  Validate_Octet_2_RegEx.SearchPattern = "\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-1][0-9]|2[0-5][0-5])\b"
		  // Third Octet RegEx Parameters (allow 0-255)
		  Validate_Octet_3_RegEx = New RegEx
		  Validate_Octet_3_RegEx.Options.CaseSensitive = False
		  Validate_Octet_3_RegEx.Options.Greedy = True
		  Validate_Octet_3_RegEx.Options.MatchEmpty = True
		  Validate_Octet_3_RegEx.Options.DotMatchAll = True
		  Validate_Octet_3_RegEx.Options.StringBeginIsLineBegin = True
		  Validate_Octet_3_RegEx.Options.StringEndIsLineEnd = True
		  Validate_Octet_3_RegEx.Options.TreatTargetAsOneLine = False
		  Validate_Octet_3_RegEx.SearchPattern ="\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-1][0-9]|2[0-5][0-5])\b"
		  // Fourth Octet RegEx Parameters (allow 1-254)
		  Validate_Octet_4_RegEx = New RegEx
		  Validate_Octet_4_RegEx.Options.CaseSensitive = False
		  Validate_Octet_4_RegEx.Options.Greedy = True
		  Validate_Octet_4_RegEx.Options.MatchEmpty = True
		  Validate_Octet_4_RegEx.Options.DotMatchAll = True
		  Validate_Octet_4_RegEx.Options.StringBeginIsLineBegin = True
		  Validate_Octet_4_RegEx.Options.StringEndIsLineEnd = True
		  Validate_Octet_4_RegEx.Options.TreatTargetAsOneLine = False
		  Validate_Octet_4_RegEx.SearchPattern = "\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-1][0-9]|2[0-5][0-4])\b"
		  
		  
		  // RegEx Process First Octet Results
		  Validate_Octet_1_RegExMatch = Validate_Octet_1_RegEx.Search(Octet_1)
		  if Validate_Octet_1_RegExMatch <> nil then
		    Validate_Octet_1_HitText = Validate_Octet_1_RegExMatch.SubExpressionString(0)
		    Validate_Octet_1_HitText = "Valid"
		    // Passed 1st Octet Validation - Move on to 2nd Octet Validation
		  elseif Validate_Octet_1_RegExMatch = nil then
		    // We did not have a Valid 1st Octet - Return
		    Return "Not_Valid"
		  end if
		  
		  // RegEx Process Second Octet Results
		  Validate_Octet_2_RegExMatch = Validate_Octet_2_RegEx.Search(Octet_2)
		  if Validate_Octet_2_RegExMatch <> nil then
		    Validate_Octet_2_HitText = Validate_Octet_2_RegExMatch.SubExpressionString(0)
		    Validate_Octet_2_HitText = "Valid"
		    // Passed 2nd Octet Validation - Move on to 3rd Octet Validation
		  elseif Validate_Octet_2_RegExMatch = nil then
		    // We did not have a Valid 2nd Octet - Return
		    Return "Not_Valid"
		  end if
		  
		  // RegEx Process Third Octet Results
		  Validate_Octet_3_RegExMatch = Validate_Octet_3_RegEx.Search(Octet_3)
		  if Validate_Octet_3_RegExMatch <> nil then
		    Validate_Octet_3_HitText = Validate_Octet_3_RegExMatch.SubExpressionString(0)
		    Validate_Octet_3_HitText = "Valid"
		    // Passed 3rd Octet Validation - Move on to 4th Octet Validation
		  elseif Validate_Octet_3_RegExMatch = nil then
		    // We did not have a Valid 3rd Octet - Return
		    Return "Not_Valid"
		  end if
		  
		  // RegEx Process Fourth and FINAL Octet
		  Validate_Octet_4_RegExMatch = Validate_Octet_4_RegEx.Search(Octet_4)
		  if Validate_Octet_4_RegExMatch <> nil then
		    Validate_Octet_4_HitText = Validate_Octet_4_RegExMatch.SubExpressionString(0)
		    Validate_Octet_4_HitText = "Valid"
		    // Passed 4th Octet Validation - Return Successful
		    Return "Valid"
		  elseif Validate_Octet_4_RegExMatch = nil then
		    // We did not have a Valid 3rd Octet - Return
		    Return "Not_Valid"
		  end if
		  
		  
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		Function fProcessSourceType(inFourthField as String) As String
		  
		  if inFourthField = "any" then
		    return "any"
		  Elseif inFourthField = "host" then
		    return "host"
		  Else
		    return "subnet"
		    
		  End if
		  
		  
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		Function fProcessWildcardMask(inWildCardMask as String) As String
		  
		  if inWildCardMask = "log" then
		    return "log"
		  Elseif inWildCardMask = "" then
		    return ""
		  else
		    Return "wcmask"
		  End if
		  
		  
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h0
		Function fSubnet_AutoInverseMask() As String
		  Dim IPAddressToProcess as String = SourceHostIPComboBox.Text
		  // Break Down Start IP into Separate Octets in Decimal Form
		  Dim StartIP_1Dec as Integer = CDbl(IPAddressToProcess.NthField(".",1))
		  Dim StartIP_2Dec as Integer = CDbl(IPAddressToProcess.NthField(".",2))
		  Dim StartIP_3Dec as Integer = CDbl(IPAddressToProcess.NthField(".",3))
		  Dim StartIP_4Dec as Integer = CDbl(IPAddressToProcess.NthField(".",4))
		  
		  // Convert IP Address and Subnet Mask into 32 Bit Decimal Words
		  Dim StartIP_32BitDecimalWord as UInt32= fConvert_8BitDecimalTo32BitDecimal(StartIP_1Dec, StartIP_2Dec, StartIP_3Dec, StartIP_4Dec)
		  
		  // Get IANA Class from 32 Bit Decimal Word
		  Dim IANA_Class_Decimal as UInt32 = fGetClassOnly(StartIP_32BitDecimalWord)
		  
		  Dim ReverseMask32Bit as uInt32  = Bitwise.OnesComplement(IANA_Class_Decimal)
		  
		  Dim ReverseMaskIP as String = fConvert_32BitDecimalTo8Bit_IP(ReverseMask32Bit)
		  
		  Return ReverseMaskIP
		  
		  
		  
		End Function
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub mAddEntry()
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array.Insert CentralCounter,CiscoACLWizardWindow.IPStandardACL_Storage
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mAddEntry_StandardACLBulk(inStandardACL_Array() as String, optional inOverWriteCC as String, optional inACLNumToUse as String)
		  
		  if inOverWriteCC = "overwrite" Then
		    CentralCounter = 0
		  Else
		    CentralCounter =CentralCounter + 1
		  End if
		  
		  For i As Integer = UBound(inStandardACL_Array) DownTo 0
		    Dim ACLNumber,DenyPermit,SourceSubnetIP, SourceWildCardMask, SourceLog, SourceType As String
		    Dim FourthField, FifthField, SixthField As String
		    
		    // Need to Break Up Array element line to map to varibles:
		    ACLNumber = Trim(inStandardACL_Array(i).NthField(" ",2))
		    DenyPermit = Trim(inStandardACL_Array(i).NthField(" ",3))
		    FourthField  = Trim(inStandardACL_Array(i).NthField(" ",4))
		    FifthField =  Trim(inStandardACL_Array(i).NthField(" ",5))
		    SixthField =  Trim(inStandardACL_Array(i).NthField(" ",6))
		    
		    If FourthField = "Any" Then
		      // Then Expect 5th field to be either Blank or Log
		      SourceType = FourthField
		      
		      if FifthField = "" Then
		        SourceLog = "No"
		      Elseif FifthField = "log" Then
		        SourceLog = "Yes"
		      End if
		      
		    Elseif FourthField = "Host" Then
		      SourceType = FourthField
		      SourceSubnetIP = FifthField
		      If SixthField = "log" Then
		        // Pass FifthField as Log
		        SourceLog = "Yes"
		      Else
		        SourceLog = "No"
		      End if
		      
		    Else // IP Addresses for Subnet
		      // Subnet IP Address
		      SourceType = "Subnet"
		      SourceSubnetIP = FourthField
		      If FifthField = "log" Then
		        // Pass FifthField as Log
		        SourceLog = "Yes"
		        
		      Elseif FifthField = "" Then
		        SourceLog = "No"
		        
		      Else // WildCard Mask
		        SourceWildCardMask = FifthField
		        If SixthField = "log" Then
		          // Pass FifthField as Log
		          SourceLog = "Yes"
		        Else
		          SourceLog = "No"
		        End if
		      End If
		    End If
		    
		    //// Re-Instantiate New Class and Create New Class Array Enty
		    CiscoACLWizardWindow.IPStandardACL_Storage = New IPStandardACL_StorageClass
		    CiscoACLWizardWindow.IPStandardACL_Storage_Array.Insert CentralCounter,CiscoACLWizardWindow.IPStandardACL_Storage
		    
		    // Save One Array Element Worth of ACL Entries into the Class Just Created
		    
		    if inACLNumToUse = "" Then
		      mSaveBulkEntriesToClass(ACLNumber,DenyPermit,SourceType,SourceSubnetIP,SourceWildCardMask,SourceLog)
		    Elseif inACLNumToUse <> "" Then
		      mSaveBulkEntriesToClass(inACLNumToUse,DenyPermit,SourceType,SourceSubnetIP,SourceWildCardMask,SourceLog)
		    End if
		    
		    // Dis-Enable the Combo Boxes
		    SourceHostIPComboBox.Enabled = False
		    SourceWildcardMaskComboBox.Enabled = False
		  Next i
		  
		  CentralCounter = UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array)
		  mLoadEntriesToScreen(CentralCounter)
		  DisplayFirst_DataLabel.Text = Str(CentralCounter+1)
		  // Update UpperBounds Display Counter
		  mSet_ACLSettings_Current_DisplayUpperBoundsCounter
		  // Shoud we Show the Prev/Next Buttons?
		  mCheckToEnableNextNavButton
		  mCheckToEnablePrevNavButton
		  
		  
		  
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub mCheckToEnableDeleteEntryButton()
		  If UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) <= 0 Then
		    ACL_Config_Del_Button.Enabled = False
		  Elseif UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) > 0 Then
		    ACL_Config_Del_Button.Enabled = True
		  End if
		  mContinueButtonShowOrHide
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub mCheckToEnableNextNavButton()
		  // Shoud we Show the Prev/Next Buttons? If we have 1 Entry (Array=0) Then Hide
		  If CentralCounter = UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) Then
		    ACL_Config_Next_Button.Enabled = False
		  Elseif CentralCounter < UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) Then
		    ACL_Config_Next_Button.Enabled = True
		  End if
		  mContinueButtonShowOrHide
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub mCheckToEnablePrevNavButton()
		  // Shoud we Show the Prev/Next Buttons? If we have 1 Entry (Array=0) Then Hide
		  If CentralCounter > 0 Then
		    ACL_Config_Prev_Button.Enabled = True
		  Elseif CentralCounter = 0 Then
		    ACL_Config_Prev_Button.Enabled = False
		  End if
		  mContinueButtonShowOrHide
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mClearControls()
		  DenyPermitPopupMenu.ListIndex = 0
		  LogACLHit_Popupmenu.ListIndex = 0
		  SourceTypePopUpMenu.ListIndex = 0
		  SourceHostIPComboBox.Text = ""
		  SourceWildcardMaskComboBox.Text = ""
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h21
		Private Sub mContinueButtonShowOrHide()
		  if SourceTypePopUpMenu.Text = "Any" Then
		    If DenyPermitPopupMenu.Text <> "" AND LogACLHit_Popupmenu.Text <> "" Then
		      NextButton.Enabled = True
		    Else
		      NextButton.Enabled = False
		    End if
		    
		  Elseif SourceTypePopUpMenu.Text  = "Host" Then
		    If SourceHostIPComboBox.Text <> "" AND LogACLHit_Popupmenu.Text <> "" AND DenyPermitPopupMenu.Text <> "" Then
		      NextButton.Enabled = True
		    Else
		      NextButton.Enabled = False
		    end if
		    
		  Elseif SourceTypePopUpMenu.Text  = "Subnet" Then
		    if SourceHostIPComboBox.Text <> "" AND SourceWildcardMaskComboBox.Text <> "" AND LogACLHit_Popupmenu.Text <> "" AND DenyPermitPopupMenu.Text <> "" Then
		      NextButton.Enabled = True
		    else
		      NextButton.Enabled = False
		    End if
		    
		  End if
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mCreateStandardACLNumber()
		  Dim DataPopMenu as String
		  Dim i as Integer
		  for i = 1 to 99
		    DataPopMenu = Str(i)
		    CIscoIOS_Standard_ACL_Number.AddRow DataPopMenu
		  Next i
		  CIscoIOS_Standard_ACL_Number.ListIndex = 0
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mDelEntryFrom_Array_Class(ACLStorageClassArrayIndex as Integer)
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array.Remove (ACLStorageClassArrayIndex)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mLoadEntriesToScreen(ACLStorageClassArrayIndex as Integer)
		  Dim CiscoIOS_Standard_ACL_NumberInt as Integer
		  Dim DenyPermitPopupMenuString,LogACLHit_PopupmenuString,SourceTypePopUpMenuString as String
		  
		  CiscoIOS_Standard_ACL_NumberInt = Val(CiscoACLWizardWindow.IPStandardACL_Storage_Array(0).ACL_Number)
		  Self.CiscoIOS_Standard_ACL_Number.ListIndex  = CiscoIOS_Standard_ACL_NumberInt-1
		  
		  // space,permit,deny,remark
		  DenyPermitPopupMenuString = CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_Decision_Action
		  if DenyPermitPopupMenuString = "" Then Self.DenyPermitPopupMenu.ListIndex = 0
		  if DenyPermitPopupMenuString = "permit" Then Self.DenyPermitPopupMenu.ListIndex = 1
		  if DenyPermitPopupMenuString = "deny" Then Self.DenyPermitPopupMenu.ListIndex = 2
		  if DenyPermitPopupMenuString = "remark" Then Self.DenyPermitPopupMenu.ListIndex = 3
		  
		  // space,Yes,No
		  LogACLHit_PopupmenuString = CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_Log_Matches
		  if LogACLHit_PopupmenuString = ""then Self.LogACLHit_Popupmenu.ListIndex = 0
		  if LogACLHit_PopupmenuString = "Yes"then Self.LogACLHit_Popupmenu.ListIndex = 1
		  if LogACLHit_PopupmenuString = "No"then Self.LogACLHit_Popupmenu.ListIndex = 2
		  
		  // space,Any,Host,Subnet
		  SourceTypePopUpMenuString = CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_SourceType
		  if SourceTypePopUpMenuString = "" Then Self.SourceTypePopUpMenu.ListIndex = 0
		  if SourceTypePopUpMenuString = "Any" Then Self.SourceTypePopUpMenu.ListIndex = 1
		  if SourceTypePopUpMenuString = "Host" Then Self.SourceTypePopUpMenu.ListIndex = 2
		  if SourceTypePopUpMenuString = "Subnet" Then Self.SourceTypePopUpMenu.ListIndex = 3
		  
		  Self.SourceHostIPComboBox.Text = CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_SourceHostIP
		  Self.SourceWildcardMaskComboBox.Text = CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_InverseMask
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mPrepareFirstEntry()
		  CiscoACLWizardWindow.IPStandardACL_Storage = New IPStandardACL_StorageClass
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array.Append CiscoACLWizardWindow.IPStandardACL_Storage
		  
		  CentralCounter = 0
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mSaveBulkEntriesToClass(inACLNumber as String, inDenyPermit as string, inSourceType as String, inSourceSubnetIP as String, inSourceWildCardMask as String, inSourceLog as String)
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Number =  inACLNumber
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Decision_Action =  inDenyPermit
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Log_Matches = inSourceLog
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_SourceType = inSourceType
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_SourceHostIP = inSourceSubnetIP
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_InverseMask = inSourceWildCardMask
		  
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mSaveEntriesToClass()
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Number =  CiscoIOS_Standard_ACL_Number.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Decision_Action =  DenyPermitPopupMenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_Log_Matches = LogACLHit_Popupmenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_SourceType = SourceTypePopUpMenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_SourceHostIP = SourceHostIPComboBox.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage.ACL_InverseMask = SourceWildcardMaskComboBox.Text
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mSet_ACLSettings_Current_DisplayCounter()
		  DisplayFirst_DataLabel.Text = Str(CentralCounter+1)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mSet_ACLSettings_Current_DisplayUpperBoundsCounter()
		  DisplayUbound_DataLabel.Text = Str(UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array)+1)
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mSet_To_First_Entry()
		  mClearControls
		  CentralCounter = 0
		  // Load Values to Display
		  mLoadEntriesToScreen(CentralCounter)
		  
		  //// Unlock the ACL Number if we are on the First Entry
		  if CentralCounter = 0 Then
		    CIscoIOS_Standard_ACL_Number.Enabled = True
		  End if
		  
		  // Update Display Stats on ACL Setting Screen
		  mSet_ACLSettings_Current_DisplayCounter
		  
		  // Shoud we Show the Prev/Next Buttons?
		  mCheckToEnableNextNavButton
		  mCheckToEnablePrevNavButton
		  //
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mUpdatesALLEntriesTo_Array(ACLStorageClassArrayIndex as Integer)
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(0).ACL_Number =  Self.CIscoIOS_Standard_ACL_Number.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_Decision_Action =  Self.DenyPermitPopupMenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_Log_Matches = Self.LogACLHit_Popupmenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_SourceType = Self.SourceTypePopUpMenu.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_SourceHostIP = Self.SourceHostIPComboBox.Text
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array(ACLStorageClassArrayIndex).ACL_InverseMask = Self.SourceWildcardMaskComboBox.Text
		  
		End Sub
	#tag EndMethod

	#tag Method, Flags = &h0
		Sub mUpdatesSingleEntriesTo_Array(ACLStorageClassArrayIndex as Integer, PopUpMenuName as PopupMenu, ClassPropertyName as String)
		  
		End Sub
	#tag EndMethod


	#tag Property, Flags = &h0
		CentralCounter As INteger = -1
	#tag EndProperty

	#tag Property, Flags = &h0
		Receive_ACL_Class As Receive_ACLClass
	#tag EndProperty

	#tag Property, Flags = &h21
		Private SourceWCorLogArray() As String
	#tag EndProperty

	#tag Property, Flags = &h21
		Private SourceWildcardMaskArray() As String
	#tag EndProperty


#tag EndWindowCode

#tag Events NextButton
	#tag Event
		Sub Action()
		  Self.Visible = False
		  
		  //Make sure the screen displaying is saved
		  mUpdatesALLEntriesTo_Array(UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array))
		  
		  CiscoACLWizardWindow.CiscoACLWizard_IOS_Standard_ACLConfig1.Visible = True
		  CiscoACLWizardWindow.CiscoACLWizard_IOS_Standard_ACLConfig1.mCreate_ACL_Configuration
		  CiscoACLWizardWindow.Height = 511
		  
		  // Reset the Extended ACL array since we are at the Standard Config Final Screen
		  // This protects us from a user going back-back and choosing Extended
		  Redim CiscoACLWizardWindow.IPExtendedACL_Storage_Array(-1)
		  CiscoACLWizardWindow.CiscoACLWizard_IOS_ExtendedACL1.mPrepareFirstEntry
		  // Hide DropACL Here Canvas
		  CiscoACLWizardWindow.DropACLCanvas.Visible = False
		  //Disable Copy Configuration Menu Feature
		  CiscoACLWizardWindow.CopyConfigurations.AutoEnable = True
		  // Enable Printing
		  CiscoACLWizardWindow.PrintConfigurations.AutoEnable = True
		  //Enable Save ACL
		  CiscoACLWizardWindow.SaveACL.AutoEnable = True
		  // Resize Window
		  CiscoACLWizardWindow.Width = 646
		  
		  
		  
		  
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events CancelButton
	#tag Event
		Sub Action()
		  CiscoACLWizardWindow.Close
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events BackButton
	#tag Event
		Sub Action()
		  CiscoACLWizardWindow.CiscoACLWizard_IOS_StandardACL1.Visible = False
		  CiscoACLWizardWindow.CiscoACLWizard_Start1.Visible = True
		  
		  // Hide DropACL Here Canvas
		  CiscoACLWizardWindow.DropACLCanvas.Visible = False
		  
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events CIscoIOS_Standard_ACL_Number
	#tag Event
		Sub MouseEnter()
		  
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseExit()
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) <> -1 Then
		    CiscoACLWizardWindow.IPStandardACL_Storage_Array(0).ACL_Number = Self.CiscoIOS_Standard_ACL_Number.Text
		  End if
		End Sub
	#tag EndEvent
	#tag Event
		Sub Change()
		  mContinueButtonShowOrHide
		  AutoSaved_Canvas.Visible = True
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events SourceWildcardMaskComboBox
	#tag Event
		Sub Change()
		  me.DeleteAllRows
		  for i as integer = 0 to UBound(SourceWildcardMaskArray)
		    me.addRow SourceWildcardMaskArray(i)
		  Next i
		  mContinueButtonShowOrHide
		  AutoSaved_Canvas.Visible = True
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  me.addRow ""
		  me.ListIndex = 0
		  
		End Sub
	#tag EndEvent
	#tag Event
		Function KeyDown(Key As String) As Boolean
		  Tooltip.Hide
		  Select Case key
		  Case Chr(32)
		    Tooltip.Show("Sorry, Spaces not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(33)
		    Tooltip.Show("Sorry, Exclamation mark not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(34)
		    Tooltip.Show("Sorry, Quotation marks not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(35)
		    Tooltip.Show("Sorry, Pound sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(36)
		    Tooltip.Show("Sorry, Dollar sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(37)
		    Tooltip.Show("Sorry, Percentage sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(38)
		    Tooltip.Show("Sorry, Ampersand not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(39)
		    Tooltip.Show("Sorry, Apostrophe not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(40)
		    Tooltip.Show("Sorry, Open Parenthesis not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(41)
		    Tooltip.Show("Sorry, Closed Parenthesis not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(42)
		    Tooltip.Show("Sorry, Asterisk not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(43)
		    Tooltip.Show("Sorry, Plus signs not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(44)
		    Tooltip.Show("Sorry, Commas not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(45)
		    Tooltip.Show("Sorry, Hyphen not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    // Allow 46 (Period)
		    
		  Case Chr(47)
		    Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    // Allow 48 - 57 (Numbers)
		    
		  Case Chr(58)
		    Tooltip.Show("Sorry, Colon not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(59)
		    Tooltip.Show("Sorry, Semi Colon not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(60)
		    Tooltip.Show("Sorry, Less than bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(61)
		    Tooltip.Show("Sorry, Equal sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(62)
		    Tooltip.Show("Sorry, Greater than bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(63)
		    Tooltip.Show("Sorry, Question Mark not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(64)
		    Tooltip.Show("Sorry, ""At"" signs not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(65) to Chr(90)
		    Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(91)
		    Tooltip.Show("Sorry, Open Square Bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(92)
		    Tooltip.Show("Sorry, Back Slash not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(93)
		    Tooltip.Show("Sorry, Closed Square Bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(94)
		    Tooltip.Show("Sorry, Caret not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(95)
		    Tooltip.Show("Sorry, Underscore not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(96)
		    Tooltip.Show("Sorry, Tilde not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(97) to Chr(122)
		    Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(123)
		    Tooltip.Show("Sorry, Open Curly Brackets not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(124)
		    Tooltip.Show("Sorry, Pipe not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(125)
		    Tooltip.Show("Sorry, Closed Curly Brackets not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(126)
		    Tooltip.Show("Sorry, Grave Accent Marks not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(127)
		    Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    Return True
		  End Select
		  
		  If key = Chr(9) Or key = Chr(13) Then
		    if Me.Text <> "" Then
		      SourceWildcardMaskArray.Append me.Text
		    End If
		    
		    // Run Inverse Subnet Mask validation
		    Dim InverseMask_Validation as String = fInverseSubnetMaskValidation(me.Text)
		    Select Case InverseMask_Validation
		    Case "Not_Valid"
		      Tooltip.Show("Please Enter a Valid Inverse Wildcard Mask", System.MouseX, System.MouseY, True)
		      me.Text = ""
		      Return True
		    Else
		      me.Text = InverseMask_Validation
		      // Check to see if we Enable or Disable the Continue Button
		      mContinueButtonShowOrHide
		    End Select
		  End If
		  
		  
		End Function
	#tag EndEvent
	#tag Event
		Sub KeyUp(Key As String)
		  mUpdatesALLEntriesTo_Array(CentralCounter)
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseMove(X As Integer, Y As Integer)
		  Tooltip.Hide
		End Sub
	#tag EndEvent
	#tag Event
		Function MouseUp(X As Integer, Y As Integer) As Boolean
		  // Run Inverse Subnet Mask validation
		  Dim InverseMask_Validation as String = fInverseSubnetMaskValidation(me.Text)
		  Select Case InverseMask_Validation
		  Case "Not_Valid"
		    Tooltip.Show("Please Enter a Valid Inverse Wildcard Mask", System.MouseX, System.MouseY, True)
		    me.Text = ""
		    Return True
		  Else
		    me.Text = InverseMask_Validation
		  End Select
		  
		  
		End Function
	#tag EndEvent
	#tag Event
		Sub LostFocus()
		  // Run Inverse Subnet Mask validation
		  Dim InverseMask_Validation as String = fInverseSubnetMaskValidation(me.Text)
		  Select Case InverseMask_Validation
		  Case "Not_Valid"
		    Tooltip.Show("Please Enter a Valid Inverse Wildcard Mask", System.MouseX, System.MouseY, True)
		    me.Text = ""
		  Else
		    me.Text = InverseMask_Validation
		  End Select
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events LogACLHit_Popupmenu
	#tag Event
		Sub Change()
		  AutoSaved_Canvas.Visible = True
		  mContinueButtonShowOrHide
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  Dim DataPop as String
		  Dim Last, Counter as Integer
		  
		  DataPop = ",Yes,No"
		  Last=CountFields(DataPop,",")
		  
		  For Counter=1 to last
		    me.addRow NthField(DataPop,",",counter)
		  Next
		  
		  me.ListIndex = 0
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseExit()
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) <> -1 Then
		    CiscoACLWizardWindow.IPStandardACL_Storage_Array(CentralCounter).ACL_Log_Matches = Self.LogACLHit_Popupmenu.Text
		  End if
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseEnter()
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events SourceHostIPComboBox
	#tag Event
		Sub Change()
		  me.DeleteAllRows
		  for i as integer = 0 to UBound(SourceWCorLogArray)
		    me.addRow SourceWCorLogArray(i)
		  Next i
		  
		  AutoSaved_Canvas.Visible = True
		  mContinueButtonShowOrHide
		  
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  me.ListIndex = 0
		  
		End Sub
	#tag EndEvent
	#tag Event
		Function KeyDown(Key As String) As Boolean
		  Tooltip.Hide
		  Select Case key
		  Case Chr(32)
		    Tooltip.Show("Sorry, Spaces not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(33)
		    Tooltip.Show("Sorry, Exclamation mark not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(34)
		    Tooltip.Show("Sorry, Quotation marks not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(35)
		    Tooltip.Show("Sorry, Pound sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(36)
		    Tooltip.Show("Sorry, Dollar sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(37)
		    Tooltip.Show("Sorry, Percentage sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(38)
		    Tooltip.Show("Sorry, Ampersand not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(39)
		    Tooltip.Show("Sorry, Apostrophe not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(40)
		    Tooltip.Show("Sorry, Open Parenthesis not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(41)
		    Tooltip.Show("Sorry, Closed Parenthesis not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(42)
		    Tooltip.Show("Sorry, Asterisk not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(43)
		    Tooltip.Show("Sorry, Plus signs not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(44)
		    Tooltip.Show("Sorry, Commas not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(45)
		    Tooltip.Show("Sorry, Hyphen not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    // Allow 46 (Period)
		    
		  Case Chr(47)
		    Tooltip.Show("Sorry, no Back Slashes allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    // Allow 48 - 57 (Numbers)
		    
		  Case Chr(58)
		    Tooltip.Show("Sorry, Colon not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(59)
		    Tooltip.Show("Sorry, Semi Colon not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(60)
		    Tooltip.Show("Sorry, Less than bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(61)
		    Tooltip.Show("Sorry, Equal sign not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(62)
		    Tooltip.Show("Sorry, Greater than bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(63)
		    Tooltip.Show("Sorry, Question Mark not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(64)
		    Tooltip.Show("Sorry, ""At"" signs not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    //Case Chr(65) to Chr(90)
		    //Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    //Return True
		    
		  Case Chr(91)
		    Tooltip.Show("Sorry, Open Square Bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(92)
		    Tooltip.Show("Sorry, Back Slash not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(93)
		    Tooltip.Show("Sorry, Closed Square Bracket not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(94)
		    Tooltip.Show("Sorry, Caret not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(95)
		    Tooltip.Show("Sorry, Underscore not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(96)
		    Tooltip.Show("Sorry, Tilde not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		    //Case Chr(97) to Chr(122)
		    //Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    //Return True
		    
		  Case Chr(123)
		    Tooltip.Show("Sorry, Open Curly Brackets not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(124)
		    Tooltip.Show("Sorry, Pipe not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(125)
		    Tooltip.Show("Sorry, Closed Curly Brackets not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(126)
		    Tooltip.Show("Sorry, Grave Accent Marks not allowed", System.MouseX, System.MouseY, True)
		    Return True
		    
		  Case Chr(127)
		    Tooltip.Show("Sorry, Only Numbers and Periods allowed", System.MouseX, System.MouseY, True)
		    Return True
		  End Select
		  
		  If key = Chr(9) Or key = Chr(13) Then
		    // Only Auto Guess Inverse Mask on Subnet type since Host is always 0.0.0.0
		    if SourceTypePopUpMenu.Text = "Subnet" Then
		      Dim GetWildcardMask as String = fSubnet_AutoInverseMask
		      SourceWildcardMaskComboBox.Text = GetWildcardMask
		    End if
		    
		    if Me.Text <> "" Then
		      SourceWCorLogArray.Append me.Text
		    End if
		    // IP validation
		    Dim IPV4_Validation as String = fIPv4_Validation(me.Text)
		    Select Case IPV4_Validation
		    Case "Not_Valid"
		      Tooltip.Show("Please Enter a Valid IPv4 Address", System.MouseX, System.MouseY, True)
		      Me.Text = ""
		      // Check to see if we Enable or Disable the Continue Button
		      mContinueButtonShowOrHide
		      Return True
		    End Select
		  End if
		  
		  
		  
		  
		End Function
	#tag EndEvent
	#tag Event
		Sub KeyUp(Key As String)
		  mUpdatesALLEntriesTo_Array(CentralCounter)
		End Sub
	#tag EndEvent
	#tag Event
		Function MouseDown(X As Integer, Y As Integer) As Boolean
		  
		End Function
	#tag EndEvent
	#tag Event
		Sub MouseMove(X As Integer, Y As Integer)
		  ToolTip.Hide
		End Sub
	#tag EndEvent
	#tag Event
		Function MouseUp(X As Integer, Y As Integer) As Boolean
		  if Me.Text <> "" Then
		    SourceWCorLogArray.Append me.Text
		  End if
		  // IP validation
		  Dim IPV4_Validation as String = fIPv4_Validation(me.Text)
		  Select Case IPV4_Validation
		  Case "Not_Valid"
		    Tooltip.Show("Please Enter a Valid IPv4 Address", System.MouseX, System.MouseY, True)
		    Me.Text = ""
		    Return True
		  End Select
		End Function
	#tag EndEvent
	#tag Event
		Sub LostFocus()
		  if Me.Text <> "" Then
		    SourceWCorLogArray.Append me.Text
		  End if
		  // IP validation
		  Dim IPV4_Validation as String = fIPv4_Validation(me.Text)
		  Select Case IPV4_Validation
		  Case "Not_Valid"
		    Tooltip.Show("Please Enter a Valid IPv4 Address", System.MouseX, System.MouseY, True)
		    Me.Text = ""
		  End Select
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events SourceTypePopUpMenu
	#tag Event
		Sub Change()
		  if me.Text = "Any" or Me.Text = "" Then
		    SourceHostIPComboBox.Visible = False
		    SourceHostIPComboBox.Enabled = False
		    EnterSourceIPHostLabel.Visible = False
		    SourceHostIPComboBox.Text = ""
		    
		    SourceWildcardMaskComboBox.Visible = False
		    SourceWildcardMaskComboBox.Enabled = False
		    SourceWildcardMaskLabel.Visible = False
		    SourceWildcardMaskComboBox.Text = ""
		    
		  Elseif me.text = "Host" Then
		    // Hide Other Controls
		    EnterSourceIPHostLabel.Visible = False
		    
		    // Show these Controls
		    SourceHostIPComboBox.Visible = True
		    SourceHostIPComboBox.Enabled = True
		    EnterSourceIPHostLabel.Visible = True
		    EnterSourceIPHostLabel.Text = "Hostname / IP Address"
		    
		    SourceWildcardMaskComboBox.Visible = False
		    SourceWildcardMaskComboBox.Enabled = False
		    SourceWildcardMaskLabel.Visible = False
		    
		  elseif me.text = "Subnet" Then
		    // Hide Other Controls
		    EnterSourceIPHostLabel.Visible = False
		    
		    // Show these Controls
		    SourceHostIPComboBox.Visible = True
		    SourceHostIPComboBox.Enabled = True
		    EnterSourceIPHostLabel.Visible = True
		    EnterSourceIPHostLabel.Text = "Subnet IP Address"
		    
		    SourceWildcardMaskComboBox.Visible = True
		    SourceWildcardMaskComboBox.Enabled = True
		    SourceWildcardMaskLabel.Visible = True
		  end if
		  
		  mContinueButtonShowOrHide
		  AutoSaved_Canvas.Visible = True
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  Dim DataPop as String
		  Dim Last, Counter as Integer
		  
		  DataPop = ",Any,Host,Subnet"
		  Last=CountFields(DataPop,",")
		  
		  For Counter=1 to last
		    me.addRow NthField(DataPop,",",counter)
		  Next
		  
		  me.ListIndex = 0
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseEnter()
		  
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseExit()
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) <> -1 Then
		    CiscoACLWizardWindow.IPStandardACL_Storage_Array(CentralCounter).ACL_SourceType = Self.SourceTypePopUpMenu.Text
		  End if
		  
		  AutoSaved_Canvas.Visible = True
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events DenyPermitPopupMenu
	#tag Event
		Sub Change()
		  mContinueButtonShowOrHide
		  AutoSaved_Canvas.Visible = True
		End Sub
	#tag EndEvent
	#tag Event
		Sub Open()
		  Dim DataPop as String
		  Dim Last, Counter as Integer
		  
		  DataPop = ",permit,deny"
		  Last=CountFields(DataPop,",")
		  
		  For Counter=1 to last
		    me.addRow NthField(DataPop,",",counter)
		  Next
		  
		  me.ListIndex = 0
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseEnter()
		  AutoSaved_Canvas.Visible = False
		End Sub
	#tag EndEvent
	#tag Event
		Sub MouseExit()
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) <> -1 Then
		    CiscoACLWizardWindow.IPStandardACL_Storage_Array(CentralCounter).ACL_Decision_Action = Self.DenyPermitPopupMenu.Text
		  End if
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events ACL_Config_New_Button
	#tag Event
		Sub Action()
		  CentralCounter =CentralCounter + 1
		  mClearControls
		  
		  //// Re-Instantiate New Class and Create New Class Array Enty
		  CiscoACLWizardWindow.IPStandardACL_Storage = New IPStandardACL_StorageClass
		  CiscoACLWizardWindow.IPStandardACL_Storage_Array.Insert CentralCounter,CiscoACLWizardWindow.IPStandardACL_Storage
		  mSaveEntriesToClass
		  // Update Display Stats on ACL Setting Screen
		  DisplayFirst_DataLabel.Text = Str(CentralCounter+1)
		  // Update UpperBounds Display Counter
		  mSet_ACLSettings_Current_DisplayUpperBoundsCounter
		  
		  
		  // Lock in ACL Number if we are past the first entry
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) > 0 Then
		    CIscoIOS_Standard_ACL_Number.Enabled = False
		  End if
		  
		  //// Shoud we Show the Prev/Next Buttons?
		  mCheckToEnableNextNavButton
		  mCheckToEnablePrevNavButton
		  mCheckToEnableDeleteEntryButton
		  
		  // Show auto "Saved" Message
		  AutoSaved_Canvas.Visible = True
		  
		  // Dis-Enable the Combo Boxes
		  SourceHostIPComboBox.Enabled = False
		  SourceWildcardMaskComboBox.Enabled = False
		  
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events ACL_Config_Del_Button
	#tag Event
		Sub Action()
		  mDelEntryFrom_Array_Class (CentralCounter)
		  
		  // If We Delete the Only Entry then replace with a new Entry
		  If UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) = -1 Then
		    CiscoACLWizardWindow.IPStandardACL_Storage = New IPStandardACL_StorageClass
		    //Reset all Options to blank or default selection
		    DenyPermitPopupMenu.ListIndex = 0
		    LogACLHit_Popupmenu.ListIndex = 0
		    SourceTypePopUpMenu.ListIndex = 0
		    SourceHostIPComboBox.Text = ""
		    SourceWildcardMaskComboBox.Text = ""
		    mSaveEntriesToClass
		  End if
		  
		  // Force Screen To Last Record (Ubound)
		  CentralCounter = UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array)
		  DisplayFirst_DataLabel.Text = Str(CentralCounter+1)
		  // Update UpperBounds Display Counter
		  mSet_ACLSettings_Current_DisplayUpperBoundsCounter
		  
		  //mLoadEntriesToScreen(CentralCounter)
		  
		  // Unlock the ACL Number if we are on the First Entry
		  if UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) = 0 Then
		    CIscoIOS_Standard_ACL_Number.Enabled = True
		  End if
		  
		  // Shoud we Show the Prev/Next Buttons?
		  mCheckToEnableNextNavButton
		  mCheckToEnablePrevNavButton
		  mCheckToEnableDeleteEntryButton
		  
		  // Show auto "Saved" Message
		  AutoSaved_Canvas.Visible = True
		  
		  
		  
		  
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events AutoSaved_Canvas
	#tag Event
		Sub Paint(g As Graphics, areas() As REALbasic.Rect)
		  g.ForeColor = RGB(228,228,228)
		  g.FillRect(0,0,me.Width,me.Height)
		  g.DrawPicture(Saved,0,0)
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events ACL_Config_Next_Button
	#tag Event
		Sub Action()
		  mClearControls
		  
		  if CentralCounter+1 <= UBound(CiscoACLWizardWindow.IPStandardACL_Storage_Array) Then
		    CentralCounter = CentralCounter + 1
		    // Load Values To Display
		    mLoadEntriesToScreen(CentralCounter)
		  End if
		  
		  // lock the ACL Number if we are Past the First Entry
		  if CentralCounter > 0 Then
		    CIscoIOS_Standard_ACL_Number.Enabled = False
		  End if
		  
		  // Update Display Stats on ACL Setting Screen
		  mSet_ACLSettings_Current_DisplayCounter
		  //
		  //// Shoud we Show the Prev/Next Buttons?
		  mCheckToEnableNextNavButton
		  mCheckToEnablePrevNavButton
		End Sub
	#tag EndEvent
#tag EndEvents
#tag Events ACL_Config_Prev_Button
	#tag Event
		Sub Action()
		  mClearControls
		  if CentralCounter-1 >= 0 Then
		    CentralCounter = CentralCounter - 1
		    
		    // Load Values to Display
		    mLoadEntriesToScreen(CentralCounter)
		    
		    
		    //// Unlock the ACL Number if we are on the First Entry
		    if CentralCounter = 0 Then
		      CIscoIOS_Standard_ACL_Number.Enabled = True
		    End if
		    
		    // lock the ACL Number if we are Past the First Entry
		    if CentralCounter > 0 Then
		      CIscoIOS_Standard_ACL_Number.Enabled = False
		    End if
		    
		    // Update Display Stats on ACL Setting Screen
		    mSet_ACLSettings_Current_DisplayCounter
		    
		    // Shoud we Show the Prev/Next Buttons?
		    mCheckToEnableNextNavButton
		    mCheckToEnablePrevNavButton
		    //
		  End if
		End Sub
	#tag EndEvent
#tag EndEvents
#tag ViewBehavior
	#tag ViewProperty
		Name="AcceptFocus"
		Visible=true
		Group="Behavior"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="AcceptTabs"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="AutoDeactivate"
		Visible=true
		Group="Appearance"
		InitialValue="True"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="BackColor"
		Visible=true
		Group="Appearance"
		InitialValue="&hFFFFFF"
		Type="Color"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Backdrop"
		Visible=true
		Group="Appearance"
		Type="Picture"
		EditorType="Picture"
	#tag EndViewProperty
	#tag ViewProperty
		Name="CentralCounter"
		Group="Behavior"
		InitialValue="-1"
		Type="INteger"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Enabled"
		Visible=true
		Group="Appearance"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="EraseBackground"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HasBackColor"
		Visible=true
		Group="Appearance"
		InitialValue="False"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Height"
		Visible=true
		Group="Position"
		InitialValue="300"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="HelpTag"
		Visible=true
		Group="Appearance"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="InitialParent"
		Group="Position"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Left"
		Visible=true
		Group="Position"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LockBottom"
		Visible=true
		Group="Position"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LockLeft"
		Visible=true
		Group="Position"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LockRight"
		Visible=true
		Group="Position"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="LockTop"
		Visible=true
		Group="Position"
		Type="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Name"
		Visible=true
		Group="ID"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Super"
		Visible=true
		Group="ID"
		Type="String"
	#tag EndViewProperty
	#tag ViewProperty
		Name="TabIndex"
		Visible=true
		Group="Position"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="TabPanelIndex"
		Group="Position"
		InitialValue="0"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="TabStop"
		Visible=true
		Group="Position"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Top"
		Visible=true
		Group="Position"
		Type="Integer"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Transparent"
		Visible=true
		Group="Behavior"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="UseFocusRing"
		Visible=true
		Group="Appearance"
		InitialValue="False"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Visible"
		Visible=true
		Group="Appearance"
		InitialValue="True"
		Type="Boolean"
		EditorType="Boolean"
	#tag EndViewProperty
	#tag ViewProperty
		Name="Width"
		Visible=true
		Group="Position"
		InitialValue="300"
		Type="Integer"
	#tag EndViewProperty
#tag EndViewBehavior
